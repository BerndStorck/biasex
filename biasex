#! /bin/bash
#
# biasex 2.0.1, 2020-07-29, 2020-08-31, 2023-07-08
#
# Lists all buildin commands for which there is also an external
# implementation.
#
# Bernd Storck, https://www.facebook.com/BStLinux/
#

SCRIPT="biasex"
VERSION="2.0.1"

if [ "${LANG:0:2}" = "de" ]; then
  UI_LANGUAGE="Deutsch"
  start_message="Externe Implementierungen auch in die Bash eingebauter Kommandos:"
  selectiv_message="Externe Implementierungen von"
  not_found="Es wurden keine passenden externen Kommandos gefunden."
else
  UI_LANGUAGE="English"
  start_message="Found external implementations of bash buildin commands:"
  selectiv_message="Found external implementations of"
  not_found="No matching external commands found."
fi

hilfe () {
# Displays program purpose and usage help.

echo -e "\n \e[1;33m$SCRIPT\e[0m ($VERSION)\n"

if [ "$UI_LANGUAGE" = "Deutsch" ]; then
 output=" Das Programm sucht im PATH für jedes in die Bash eingebaute Kommando
 nach einem gleichnamigen externen Kommando im System.

 AUFRUF: Normalerweise ohne Parameter oder Argumente
         oder durch Angabe eines oder mehrerer Programmen.

  $SCRIPT

 BEISPIELAUFRUF:
 
  $SCRIPT test printf echo

 ZULÄSSIGE PARAMETER:

  --help|-h|--hilf  Diese Hilfe anzeigen
"

else  # English help:

  output=" Searchs for every bash buildin command in PATH for an
 external command with the same name.

 START: Normally without parameters or arguments, 
        or by specifying one or more programs.

  $SCRIPT
  
 SAMPLE CALL:

   $SCRIPT test printf echo

 POSSIBLE PARAMETERS:

  --help|-h|--hilf  Show this help
"
fi

printf "%s\n" "$output"
}


### main ###################

if [ "$#" -gt 0 ]; then
  case "$1" in
      --help|-h|--hilf|-help|-hilf)
        hilfe
        exit 0
        ;;
   *)
     searched_commands="$*"
     ;;
  esac
  
  found_external_commands="$(type -ap $(compgen -b) )"
  
  for i in $searched_commands
  do
    output="${output}$(grep -w "$i" <<< "$found_external_commands")"
  done
  
  if [ -n "$output" ]; then
    printf "%s %s\n\n" "$selectiv_message" "$*"
    printf "%s\n\n" "$output"
  else
    printf "%s\n" "$not_found"
    exit 1
  fi

else
  printf "\n%s\n\n" "$start_message"
  type -ap $(compgen -b) 
  printf "\n"

fi

exit 0
