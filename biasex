#! /bin/bash
#
# biasex 2.0.4, 2020-07-29, 2020-08-31, 2023-07-08, 2023-07-10
#
# Lists all buildin commands for which there is also an external
# implementation.
#
# Bernd Storck, https://www.facebook.com/BStLinux/
#

## Constants: ############################
readonly ORIGINAL_SCRIPT_NAME="biasex"
readonly VERSION="2.0.4"
readonly CURRENT_SCRIPT_NAME="${0##*/}"  ## Equivalent to: "$(basename "$0")", name of the script file.

if [ "${LANG:0:2}" = "de" ]; then
  UI_LANGUAGE="Deutsch"
  start_message="Externe Implementierungen auch in die Bash eingebauter Kommandos:"
  selectiv_message="Externe Implementierungen von "
  not_found="Es wurden keine passenden externen Kommandos gefunden."
  if [ "$CURRENT_SCRIPT_NAME" != "$ORIGINAL_SCRIPT_NAME" ]; then
    current_name_title="Derzeitiger Dateiname"
    current_file_name_reference=" / ${current_name_title}: $CURRENT_SCRIPT_NAME"
  fi
else
  UI_LANGUAGE="English"
  start_message="Found external implementations of bash buildin commands:"
  selectiv_message="Found external implementations of $*"
  not_found="No matching external commands found."
  if [ "$CURRENT_SCRIPT_NAME" != "$ORIGINAL_SCRIPT_NAME" ]; then
    current_name_title="Current script name"
    current_file_name_reference=" / ${current_name_title}: $CURRENT_SCRIPT_NAME"
  fi
fi

hilfe () {
# Displays program purpose and usage help.

printf "\n \e[1;33m%s\e[0m (%s)%s\n\n" "$ORIGINAL_SCRIPT_NAME" "$VERSION" "$current_file_name_reference"

if [ "$UI_LANGUAGE" = "Deutsch" ]; then
 output=" Das Programm sucht im PATH für jedes in die Bash eingebaute Kommando
 nach einem gleichnamigen externen Kommando im System.

 AUFRUF: Normalerweise ohne Parameter oder Argumente
         oder durch Angabe eines oder mehrerer Programmen.

  $CURRENT_SCRIPT_NAME

 BEISPIELAUFRUF:

  $CURRENT_SCRIPT_NAME test printf echo

 ZULÄSSIGE PARAMETER:

  --help|-h|--hilf  Diese Hilfe anzeigen
  --version|-V      Den Namen und die Versionsnummer des Programms anzeigen.
  -v|-#             Die Versionsnummer des Programms ausgeben.
"

else  # English help:

  output=" Searchs for every bash buildin command in PATH for an
 external command with the same name.

 START: Normally without parameters or arguments,
        or by specifying one or more programs.

  $CURRENT_SCRIPT_NAME

 SAMPLE CALL:

   $CURRENT_SCRIPT_NAME test printf echo

 POSSIBLE PARAMETERS:

  --help|-h|--hilf  Shows this help.
  --version|-V      Displays name an version number of the program.
  -v|-#             Shows the version number of the program.
"
fi

printf "%s\n" "$output"
}


### main ###################

if [ "$#" -gt 0 ]; then
  case "$1" in
      --help|-h|--hilf|-help|-hilf)
        hilfe
        exit 0
        ;;
      -v|-\#)
        echo "$VERSION"
        exit 0
        ;;
      --version|-V)
        printf "%s (Version %s)%s\n" "$ORIGINAL_SCRIPT_NAME" "$VERSION" "$current_file_name_reference"
        exit 0
        ;;
     *)
       searched_commands="$*"
       ;;
  esac

  found_external_commands="$(type -ap $(compgen -b) )"

  success=1
  for i in $searched_commands
  do
    output="${output}$(grep -w "$i" <<< "$found_external_commands")\n"
    [ "$?" -eq 0 ] && success=0
  done

  if [ "$success" -eq 0 ]; then
    printf "\n%s" "$selectiv_message"
    for j in "$@"
    do
      program_list="${program_list}$j, "
    done
    program_list="${program_list%??}:"
    printf "%s\n\n" "$program_list"
    printf "%b\n" "$output"
  else
    printf "%s\n" "$not_found"
    exit 1
  fi

else
  printf "\n%s\n\n" "$start_message"
  type -ap $(compgen -b)
  printf "\n"

fi

exit 0
